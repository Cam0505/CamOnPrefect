name: Continuous Integration

on:
  push:
    branches:
      - main
    paths:
      - 'dbt/models/**'
  pull_request:
    branches:
      - main
    paths:
      - 'dbt/models/**'

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout main branch
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Needed to fetch other branches like dbt-manifest-state

      - name: Set up Git config
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

      - name: Try to restore previous manifest from dbt-manifest-state branch
        run: |
          git fetch origin dbt-manifest-state || echo "No manifest branch yet"
          git checkout origin/dbt-manifest-state -- dbt/previous-manifest/manifest.json || echo "No previous manifest found"
        continue-on-error: true

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Set up DBT profile
        run: |
          mkdir -p ~/.dbt
          cat > ~/.dbt/profiles.yml <<EOF
          camonprefect:
            outputs:
              dev:
                type: duckdb
                path: ${{ secrets.MOTHERDUCK }}
                schema: public
                threads: 2
                extensions:
                  - httpfs
                  - parquet
                  - motherduck
            target: dev
          EOF

      - name: Install DBT packages
        run: cd dbt && dbt deps

      - name: Run DBT build (with fallback)
        run: |
          cd dbt
          if [ -f previous-manifest/manifest.json ]; then
            echo "Running incremental dbt build with state:modified+"
            dbt build --select state:modified+ --state=previous-manifest
          else
            echo "No previous manifest. Running full dbt build"
            dbt build
          fi

      - name: Compile DBT and generate new manifest
        run: |
          cd dbt
          rm -rf previous-manifest
          dbt compile --target-path=previous-manifest
          echo "New manifest compiled at dbt/previous-manifest"

      - name: Commit and push updated manifest to dbt-manifest-state branch
        run: |
          if git show-ref --quiet refs/heads/dbt-manifest-state; then
            git worktree add tmp-state-branch dbt-manifest-state || echo "Worktree already exists"
          else
            # Create orphan branch in worktree and initialize it with empty commit
            git worktree add tmp-state-branch
            cd tmp-state-branch
            git checkout --orphan dbt-manifest-state
            git rm -rf .
            git commit --allow-empty -m "Initialize manifest state branch"
            cd ..
          fi

          mkdir -p tmp-state-branch/dbt/previous-manifest
          cp -r dbt/previous-manifest/* tmp-state-branch/dbt/previous-manifest/

          cd tmp-state-branch

          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

          git add dbt/previous-manifest/manifest.json
          git commit -m "Update manifest for run ${{ github.run_id }}" || echo "No changes to commit"
          git push origin dbt-manifest-state --force

          cd ..

          # Clean and forcibly remove the worktree to avoid errors
          git worktree prune
          git worktree remove --force tmp-state-branch